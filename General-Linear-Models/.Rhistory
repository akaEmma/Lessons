data = diversity,
method = "pearson",
conf.level = 0.95))
# Chunk 1: setup
options(digits = 3, scipen = 9999)
if(!require(learnr)){install.packages("learnr")}
library(learnr)
### --------------------------------------------------------------
### Correlation and linear regression, species diversity example
### pp. 207â€“208 from Biostats Handbook
### --------------------------------------------------------------
Input = ("
Town                  State  Latitude  Species
'Bombay Hook'          DE     39.217    128
'Cape Henlopen'        DE     38.800    137
'Middletown'           DE     39.467    108
'Milford'              DE     38.958    118
'Rehoboth'             DE     38.600    135
'Seaford-Nanticoke'    DE     38.583     94
'Wilmington'           DE     39.733    113
'Crisfield'            MD     38.033    118
'Denton'               MD     38.900     96
'Elkton'               MD     39.533     98
'Lower Kent County'    MD     39.133    121
'Ocean City'           MD     38.317    152
'Salisbury'            MD     38.333    108
'S Dorchester County'  MD     38.367    118
'Cape Charles'         VA     37.200    157
'Chincoteague'         VA     37.967    125
'Wachapreague'         VA     37.667    114
")
diversity <- read.table(textConnection(Input), header = TRUE)
rm(Input)
Input = ("
Speed   Pulse
0       57
1.6     69
3.1     78
4       80
5       85
6       87
6.9     90
7.7     92
8.7     97
12.4    108
15.3    119
")
exercise <- read.table(textConnection(Input), header = TRUE)
rm(Input)
Input = ("
Weight  Eggs
5.38	29
7.36	23
6.13	22
4.75	20
8.10	25
8.62	25
6.30	17
7.44	24
7.26	20
7.17	27
7.78	24
6.23	21
5.42	22
7.87	22
5.25	23
7.37	35
8.01	27
4.92	23
7.03	25
6.45	24
5.06	19
6.72	21
7.00	20
9.39	33
6.49	17
6.34	21
6.16	25
5.74	22
")
eggs <- read.table(textConnection(Input), header = TRUE)
rm(Input)
coramph <- cor.test(~ Species + Latitude,
data = diversity,
method = "pearson",
conf.level = 0.95)
coreggs <- cor.test(~ Weight + Eggs,
data = eggs,
method = "pearson",
conf.level = 0.95)
corex <- cor.test(~ Pulse + Speed,
data = exercise,
method = "pearson",
conf.level = 0.95)
# Chunk 2: bb
question("What are NOT examples of a correlation or linear regression null hypothesis?",
answer("My electric bill is always high.", correct = TRUE),
answer("My electric bill is high no matter how much television I watch."),
answer("My electric bill is low no matter how much television I watch"),
answer("I watch a lot of television.", correct = TRUE),
allow_retry = TRUE,
random_answer_order = TRUE
)
# Chunk 3: exercise
# Chunk 4: exercise-solution
exercise
# Chunk 5: passpulse
# Chunk 6: passpulse-solution
plot(exercise)
# Chunk 7: eggs
# Chunk 8: eggs-solution
eggs
plot(eggs)
# Chunk 9: plotdiversity
# Chunk 10: plotdiversity-solution
plot(Species ~ Latitude,
data = diversity,
pch = 16)
# Chunk 11: helpcortest
# Chunk 12: helpcortest-solution
?cor.test
(cordiverse <- cor.test(~ Species + Latitude,
data = diversity,
method = "pearson",
conf.level = 0.95))
question("True or false: You have just proven that there is no relationship between the two variables.",
answer("True because _p_ > .05"),
answer("False because failing to reject the null is not the same as accepting it", correct = TRUE),
random_answer_order = TRUE,
allow_retry = TRUE
)
(corex <- cor.test(~ Pulse + Speed,
data = exercise,
method = "pearson",
conf.level = 0.95))
(diverse_fit <- lm(Species ~ Latitude,
data = diversity))
summary(diverse_fit)
question("In plain English, what should you decide about the hypothesis?",
answer("Since _p_ is above .05, I will not reject the null hypothesis.", correct = TRUE),
answer("This is just too hard. I'm going to bag it."),
answer("Since _p_ is above .05, I will reject the null hypothesis."),
answer("The data isn't fit for hypothesis tests."),
random_answer_order = TRUE,
allow_retry = TRUE
)
eggs_fit <- lm(Eggs ~ Weight,
data = eggs)
summary(eggs_fit)
question("What is the intercept for the correlation between Weight and Eggs?",
answer("1.60"),
answer("63.5"),
answer("12.7", correct = TRUE),
answer("0"),
random_answer_order = TRUE,
allow_retry = TRUE
)
question("Interpret the meaning of beta in the regression formula for Eggs and Weight.",
answer("For every 1 unit increase in weight, we expect 3.75 more eggs."),
answer("For every 3.75 change in latitude we expect the number of species to be 1 more."),
answer("For every additional egg, we expect 1.60 more mg weight.", correct = TRUE),
answer("For every addition mg in weight, we expect 1.60 more eggs."),
random_answer_order = TRUE,
allow_retry = TRUE
)
question("What is the value of _p_ for the linear regression of Eggs and Weight?",
answer("3.74"),
answer(".206"),
answer(".175"),
answer(".0154", correct = TRUE),
random_answer_order = TRUE,
allow_retry = TRUE
)
question("Which of the following situations needs to be true for the same data set to result in too many false positives from a Correlation and Regression? (Please select ALL that apply)",
answer("A very small sample size", correct = TRUE),
answer("A flat distribution", correct = TRUE),
answer("A bimodal distribution", correct = TRUE),
allow_retry = TRUE,
random_answer_order = TRUE
)
if(!require(PerformanceAnalytics)){install.packages("PerformanceAnalytics")}
install.packages("PerformanceAnalytics")
sodium = read.table(textConnection(Input),header=TRUE)
Input = ("
Instructor       Grade   Weight  Calories Sodium  Score
'Brendon Small'     6      43     2069    1287      77
'Brendon Small'     6      41     1990    1164      76
'Brendon Small'     6      40     1975    1177      76
'Brendon Small'     6      44     2116    1262      84
'Brendon Small'     6      45     2161    1271      86
'Brendon Small'     6      44     2091    1222      87
'Brendon Small'     6      48     2236    1377      90
'Brendon Small'     6      47     2198    1288      78
'Brendon Small'     6      46     2190    1284      89
'Jason Penopolis'   7      45     2134    1262      76
'Jason Penopolis'   7      45     2128    1281      80
'Jason Penopolis'   7      46     2190    1305      84
'Jason Penopolis'   7      43     2070    1199      68
'Jason Penopolis'   7      48     2266    1368      85
'Jason Penopolis'   7      47     2216    1340      76
'Jason Penopolis'   7      47     2203    1273      69
'Jason Penopolis'   7      43     2040    1277      86
'Jason Penopolis'   7      48     2248    1329      81
'Melissa Robins'    8      48     2265    1361      67
'Melissa Robins'    8      46     2184    1268      68
'Melissa Robins'    8      53     2441    1380      66
'Melissa Robins'    8      48     2234    1386      65
'Melissa Robins'    8      52     2403    1408      70
'Melissa Robins'    8      53     2438    1380      83
'Melissa Robins'    8      52     2360    1378      74
'Melissa Robins'    8      51     2344    1413      65
'Melissa Robins'    8      51     2351    1400      68
'Paula Small'       9      52     2390    1412      78
'Paula Small'       9      54     2470    1422      62
'Paula Small'       9      49     2280    1382      61
'Paula Small'       9      50     2308    1410      72
'Paula Small'       9      55     2505    1410      80
'Paula Small'       9      52     2409    1382      60
'Paula Small'       9      53     2431    1422      70
'Paula Small'       9      56     2523    1388      79
'Paula Small'       9      50     2315    1404      71
'Coach McGuirk'    10      52     2406    1420      68
'Coach McGuirk'    10      58     2699    1405      65
'Coach McGuirk'    10      57     2571    1400      64
'Coach McGuirk'    10      52     2394    1420      69
'Coach McGuirk'    10      55     2518    1379      70
'Coach McGuirk'    10      52     2379    1393      61
'Coach McGuirk'    10      59     2636    1417      70
'Coach McGuirk'    10      54     2465    1414      59
'Coach McGuirk'    10      54     2479    1383      61
")
sodium = read.table(textConnection(Input),header=TRUE)
rm(Input)
library(rcompanion)
plotNormalHistogram(sodium$Sodium)
plotNormalHistogram(sodium$Calories)
qqnorm(diet$Sodium)
Input = ("
Instructor       Grade   Weight  Calories Sodium  Score
'Brendon Small'     6      43     2069    1287      77
'Brendon Small'     6      41     1990    1164      76
'Brendon Small'     6      40     1975    1177      76
'Brendon Small'     6      44     2116    1262      84
'Brendon Small'     6      45     2161    1271      86
'Brendon Small'     6      44     2091    1222      87
'Brendon Small'     6      48     2236    1377      90
'Brendon Small'     6      47     2198    1288      78
'Brendon Small'     6      46     2190    1284      89
'Jason Penopolis'   7      45     2134    1262      76
'Jason Penopolis'   7      45     2128    1281      80
'Jason Penopolis'   7      46     2190    1305      84
'Jason Penopolis'   7      43     2070    1199      68
'Jason Penopolis'   7      48     2266    1368      85
'Jason Penopolis'   7      47     2216    1340      76
'Jason Penopolis'   7      47     2203    1273      69
'Jason Penopolis'   7      43     2040    1277      86
'Jason Penopolis'   7      48     2248    1329      81
'Melissa Robins'    8      48     2265    1361      67
'Melissa Robins'    8      46     2184    1268      68
'Melissa Robins'    8      53     2441    1380      66
'Melissa Robins'    8      48     2234    1386      65
'Melissa Robins'    8      52     2403    1408      70
'Melissa Robins'    8      53     2438    1380      83
'Melissa Robins'    8      52     2360    1378      74
'Melissa Robins'    8      51     2344    1413      65
'Melissa Robins'    8      51     2351    1400      68
'Paula Small'       9      52     2390    1412      78
'Paula Small'       9      54     2470    1422      62
'Paula Small'       9      49     2280    1382      61
'Paula Small'       9      50     2308    1410      72
'Paula Small'       9      55     2505    1410      80
'Paula Small'       9      52     2409    1382      60
'Paula Small'       9      53     2431    1422      70
'Paula Small'       9      56     2523    1388      79
'Paula Small'       9      50     2315    1404      71
'Coach McGuirk'    10      52     2406    1420      68
'Coach McGuirk'    10      58     2699    1405      65
'Coach McGuirk'    10      57     2571    1400      64
'Coach McGuirk'    10      52     2394    1420      69
'Coach McGuirk'    10      55     2518    1379      70
'Coach McGuirk'    10      52     2379    1393      61
'Coach McGuirk'    10      59     2636    1417      70
'Coach McGuirk'    10      54     2465    1414      59
'Coach McGuirk'    10      54     2479    1383      61
")
diet = read.table(textConnection(Input),header=TRUE)
rm(Input)
library(psych)
headTail(diet)
str(diet)
summary(diet)
library(psych)
headTail(diet)
str(diet)
summary(diet)
library(rcompanion)
plotNormalHistogram(diet$Sodium)
plotNormalHistogram(diet$Calories)
qqnorm(diet$Sodium)
qqline(diet$Sodium, col = "red")
qqnorm(diet$Calories)
qqline(diet$Calories, col = "red")
qqline(diet$Calories, col = "blue")
qqline(diet$Calories, col = "purple")
qqnorm(diet$Sodium, main = "Normal Q-Q Plot: Sodium")
qqline(diet$Sodium, col = "red")
qqnorm(diet$Calories, main = "Normal Q-Q Plot: Calories")
qqline(diet$Calories, col = "purple")
qqline(diet$Calories, col = "blue")
qqline(diet$Calories, col = "magenta")
qqnorm(diet$Sodium, main = "Normal Q-Q Plot: Sodium")
qqline(diet$Sodium, col = "red")
# Chunk 1: setup
options(digits = 3, scipen = 9999)
if(!require(learnr)){install.packages("learnr")}
library(learnr)
if(!require(psych)){install.packages("psych")}
if(!require(PerformanceAnalytics)){install.packages("PerformanceAnalytics")}
if(!require(ggplot2)){install.packages("ggplot2")}
if(!require(rcompanion)){install.packages("rcompanion")}
### --------------------------------------------------------------
### Correlation and linear regression, species diversity example
### pp. 207â€“208 from Biostats Handbook
### --------------------------------------------------------------
Input = ("
Town                  State  Latitude  Species
'Bombay Hook'          DE     39.217    128
'Cape Henlopen'        DE     38.800    137
'Middletown'           DE     39.467    108
'Milford'              DE     38.958    118
'Rehoboth'             DE     38.600    135
'Seaford-Nanticoke'    DE     38.583     94
'Wilmington'           DE     39.733    113
'Crisfield'            MD     38.033    118
'Denton'               MD     38.900     96
'Elkton'               MD     39.533     98
'Lower Kent County'    MD     39.133    121
'Ocean City'           MD     38.317    152
'Salisbury'            MD     38.333    108
'S Dorchester County'  MD     38.367    118
'Cape Charles'         VA     37.200    157
'Chincoteague'         VA     37.967    125
'Wachapreague'         VA     37.667    114
")
diversity <- read.table(textConnection(Input), header = TRUE)
rm(Input)
Input = ("
Speed   Pulse
0       57
1.6     69
3.1     78
4       80
5       85
6       87
6.9     90
7.7     92
8.7     97
12.4    108
15.3    119
")
exercise <- read.table(textConnection(Input), header = TRUE)
rm(Input)
Input = ("
Weight  Eggs
5.38	29
7.36	23
6.13	22
4.75	20
8.10	25
8.62	25
6.30	17
7.44	24
7.26	20
7.17	27
7.78	24
6.23	21
5.42	22
7.87	22
5.25	23
7.37	35
8.01	27
4.92	23
7.03	25
6.45	24
5.06	19
6.72	21
7.00	20
9.39	33
6.49	17
6.34	21
6.16	25
5.74	22
")
eggs <- read.table(textConnection(Input), header = TRUE)
rm(Input)
coramph <- cor.test(~ Species + Latitude,
data = diversity,
method = "pearson",
conf.level = 0.95)
coreggs <- cor.test(~ Weight + Eggs,
data = eggs,
method = "pearson",
conf.level = 0.95)
corex <- cor.test(~ Pulse + Speed,
data = exercise,
method = "pearson",
conf.level = 0.95)
Input = ("
Instructor       Grade   Weight  Calories Sodium  Score
'Brendon Small'     6      43     2069    1287      77
'Brendon Small'     6      41     1990    1164      76
'Brendon Small'     6      40     1975    1177      76
'Brendon Small'     6      44     2116    1262      84
'Brendon Small'     6      45     2161    1271      86
'Brendon Small'     6      44     2091    1222      87
'Brendon Small'     6      48     2236    1377      90
'Brendon Small'     6      47     2198    1288      78
'Brendon Small'     6      46     2190    1284      89
'Jason Penopolis'   7      45     2134    1262      76
'Jason Penopolis'   7      45     2128    1281      80
'Jason Penopolis'   7      46     2190    1305      84
'Jason Penopolis'   7      43     2070    1199      68
'Jason Penopolis'   7      48     2266    1368      85
'Jason Penopolis'   7      47     2216    1340      76
'Jason Penopolis'   7      47     2203    1273      69
'Jason Penopolis'   7      43     2040    1277      86
'Jason Penopolis'   7      48     2248    1329      81
'Melissa Robins'    8      48     2265    1361      67
'Melissa Robins'    8      46     2184    1268      68
'Melissa Robins'    8      53     2441    1380      66
'Melissa Robins'    8      48     2234    1386      65
'Melissa Robins'    8      52     2403    1408      70
'Melissa Robins'    8      53     2438    1380      83
'Melissa Robins'    8      52     2360    1378      74
'Melissa Robins'    8      51     2344    1413      65
'Melissa Robins'    8      51     2351    1400      68
'Paula Small'       9      52     2390    1412      78
'Paula Small'       9      54     2470    1422      62
'Paula Small'       9      49     2280    1382      61
'Paula Small'       9      50     2308    1410      72
'Paula Small'       9      55     2505    1410      80
'Paula Small'       9      52     2409    1382      60
'Paula Small'       9      53     2431    1422      70
'Paula Small'       9      56     2523    1388      79
'Paula Small'       9      50     2315    1404      71
'Coach McGuirk'    10      52     2406    1420      68
'Coach McGuirk'    10      58     2699    1405      65
'Coach McGuirk'    10      57     2571    1400      64
'Coach McGuirk'    10      52     2394    1420      69
'Coach McGuirk'    10      55     2518    1379      70
'Coach McGuirk'    10      52     2379    1393      61
'Coach McGuirk'    10      59     2636    1417      70
'Coach McGuirk'    10      54     2465    1414      59
'Coach McGuirk'    10      54     2479    1383      61
")
diet = read.table(textConnection(Input),header=TRUE)
rm(Input)
# Chunk 2: bb
question("What are NOT examples of a correlation or linear regression null hypothesis?",
answer("My electric bill is always high.", correct = TRUE),
answer("My electric bill is high no matter how much television I watch."),
answer("My electric bill is low no matter how much television I watch"),
answer("I watch a lot of television.", correct = TRUE),
allow_retry = TRUE,
random_answer_order = TRUE
)
# Chunk 3: corregpackages
if(!require(psych)){install.packages("psych")}
if(!require(PerformanceAnalytics)){install.packages("PerformanceAnalytics")}
if(!require(ggplot2)){install.packages("ggplot2")}
if(!require(rcompanion)){install.packages("rcompanion")}
# Chunk 4: exercise
# Chunk 5: exercise-solution
exercise
# Chunk 6: passpulse
# Chunk 7: passpulse-solution
plot(exercise)
# Chunk 8: eggs
# Chunk 9: eggs-solution
eggs
plot(eggs)
# Chunk 10: plotdiversity
# Chunk 11: plotdiversity-solution
plot(Species ~ Latitude,
data = diversity,
pch = 16)
# Chunk 12: helpcortest
# Chunk 13: helpcortest-solution
?cor.test
# Chunk 14: cordiversity
names(diversity)
(cordiv <- cor.test(~ Species + Latitude, data = diversity, method = "pearson", conf.level = 0.95 ))
(cordiv <- cor.test(~ Species + Latitude,
data = diversity,
method = "pearson",
conf.level = 0.95 ))
library(rcompanion)
plotNormalHistogram(diet$Sodium, main = "Normal Histogram of Sodium")
plotNormalHistogram(diet$Calories, main = "Normal Histogram of Calories")
library(rcompanion)
plotNormalHistogram(diet$Sodium, main = "Normal Histogram of Sodium",
xlab = "Sodium in mg")
plotNormalHistogram(diet$Calories, main = "Normal Histogram of Calories",
xlab = "Calories")
qqnorm(diet$Sodium, main = "Normal Q-Q Plot: Sodium")
qqline(diet$Sodium, col = "red")
qqnorm(diet$Calories, main = "Normal Q-Q Plot: Calories")
qqline(diet$Calories, col = "magenta")
qqnorm(diet$Sodium, main = "Normal Q-Q Plot: Sodium")
qqline(diet$Sodium, col = "red")
qqnorm(diet$Calories, main = "Normal Q-Q Plot: Calories")
qqline(diet$Calories, col = "magenta")
