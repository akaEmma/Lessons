math <- read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeMath.csv")
lang <- read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeLang.csv")
math
math <- as_tibble(read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeMath.csv"))
library(tidyverse)
math <- as_tibble(read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeMath.csv"))
lang <- as_tibble(read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeLang.csv"))
math
lang
math
lang
?rename
rename(data = math, id = subjectID)
rename(.data = math, id = subjectID)
rename(.data = math, id = subjectID, date = testDate, score = mathScore)
math <- rename(.data = math, id = subjectID, date = testDate, score = mathScore)
lang
lang <- rename(.data = lang, id = subjectID, date = testDate, score = languageScore)
lang
names(c(math, lang))
names(math) <- tolower(names(math))
names(lang) <- tolower(names(lang))
str(math)
str(lang)
range(c(math$id))
range(c(lang$id))
qplot(data = math, y = scores, geom = "density")
qplot(data = math, y = score, geom = "density")
qplot(data = math, y = score, x = date, geom = "density")
range(c(math, lang))
names(c(math, lang))
names(c(math$score, lang$score))
names(c(math, lang))
range(c(math$score, lang$score))
range(c(math$score))
range(c(lang$score))
range(c(math$id, lang$id))
range(c(math$score, lang$score))
str(lang)
range(math$date)
summary(math$date)
levels(c(math$id))
levels(math$date)
levels(c(math$date, lang$date))
head(levels(c(math$date, lang$date)))
str(math$date)
length(math$date)
nrow(math)
dim(math); dim(lang)
names(c(math, lang))
names(math); names(lang)
library(tidyverse)
math <- as_tibble(read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeMath.csv"))
lang <- as_tibble(read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeLang.csv"))
math
lang
math <- rename(.data = math, id = subjectID, date = testDate, score = mathScore)
lang <- rename(.data = lang, id = subjectID, date = testDate, score = languageScore)
dim(math); dim(lang)
names(math); names(lang)
range(c(math$id, lang$id))
class(math$date); class(lang$date)
question("What would you have done if the range of `id`s had been outside of 1 - 1000?",
answer("Find out which of the two variables had elements outside that range", correct = TRUE),
answer("Assume that both variables are not as we thought", message = "Any time you hear or think 'assume`, ask yourself how you can ascertain the truth of the assumption."),
answer("Move along because `id` is not an important variable", message = "Have you any reason to believe that this is an unimportant variable besides the fact that it is called `id`?"),
answer("Reset all the `id`s in both data sets so they fall within the expected range", message = "Have you ascertained that each `id` is used only once? Until you know more, you should leave their values alone."),
random_answer_order = TRUE,
allow_retry = TRUE
)
# Chunk 1: setup
library(learnr)
library(data.table)
library(dplyr)
library(pwr)
library(tidyr)
library(stats)
library(ggplot2)
library(sortable)
shhh <- suppressPackageStartupMessages
shh <- suppressWarnings
sh <- suppressMessages
knitr::opts_chunk$set(echo = FALSE)
options(digits = 3, scipen = 9999)
tutorial_options(exercise.completion = FALSE,
exercise.eval = TRUE,
exercise.lines = 8,
exercise.diagnostics = TRUE)
math <- read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeMath.csv")
lang <- read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeLang.csv")
# Chunk 2: load-data
# library(tidyverse)
# math <- as_tibble(read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeMath.csv"))
# lang <- as_tibble(read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeLang.csv"))
# Chunk 3: load-data-solution
library(tidyverse)
math <- as_tibble(read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeMath.csv"))
lang <- as_tibble(read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeLang.csv"))
# Chunk 4: seemath-lang
# Chunk 5: seemath-lang-hint
math
...
# Chunk 6: seemath-lang-solution
math
lang
# Chunk 7: rename-vars
# Chunk 8: rename-vars-hint-1
math <- rename(...)
# Chunk 9: rename-vars-hint-2
math <- rename(.data = math, ...)
rename(.data = lang, ...)
# Chunk 10: rename-vars-hint-3
math <- rename(.data = math, id = subjectID, ...)
lang <- rename(.data = lang, ...)
# Chunk 11: rename-vars-solution
math <- rename(.data = math, id = subjectID, date = testDate, score = mathScore)
lang <- rename(.data = lang, id = subjectID, date = testDate, score = languageScore)
# Chunk 12: confirm-data-shapes
# Chunk 13: confirm-data-shapes-hint-1
dim(math); dim(lang)
names(math); names(lang)
range(c(math$id, lang$id))
range(c(math$score, lang$score))
head(levels(math$date))
head(levels(lang$date))
levels(c(math$id))
range(c(lang$id))
qplot(data = math, y = scores, geom = "density")
qplot(data = lang, y = scores, geom = "density")
summary(math$score)
summary(lang$score)
# Chunk 14: confirm-data-shapes-hint-2
# Chunk 15: confirm-data-shapes-hint-3
# Chunk 16: confirm-data-shapes-hint-4
# Chunk 17: confirm-data-shapes-solution
question("What would you have done if the range of `id`s had been outside of 1 - 1000?",
answer("Find out which of the two variables had elements outside that range", correct = TRUE),
answer("Assume that both variables are not as we thought", message = "Any time you hear or think 'assume`, ask yourself how you can ascertain the truth of the assumption."),
answer("Move along because `id` is not an important variable", message = "Have you any reason to believe that this is an unimportant variable besides the fact that it is called `id`?"),
answer("Reset all the `id`s in both data sets so they fall within the expected range", message = "Have you ascertained that each `id` is used only once? Until you know more, you should leave their values alone."),
random_answer_order = TRUE,
allow_retry = TRUE
)
library(learnr)
library(data.table)
library(dplyr)
library(pwr)
library(tidyr)
library(stats)
library(ggplot2)
library(sortable)
shhh <- suppressPackageStartupMessages
shh <- suppressWarnings
sh <- suppressMessages
knitr::opts_chunk$set(echo = FALSE)
options(digits = 3, scipen = 9999)
tutorial_options(exercise.completion = FALSE,
exercise.eval = TRUE,
exercise.lines = 8,
exercise.diagnostics = TRUE)
math <- read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeMath.csv")
lang <- read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeLang.csv")
mathr <- rename(.data = math, id = subjectID, date = testDate, score = mathScore)
langr <- rename(.data = lang, id = subjectID, date = testDate, score = languageScore)
dim(mathr); dim(langr)
names(mathr); names(langr)
range(c(mathr$id, langr$id))
range(c(mathr$score, langr$score))
head(levels(mathr$date))
head(levels(langr$date))
class(mathr(date)); class(langr$date)
class(mathr$date); class(langr$date)
dim(mathr); dim(langr)
math
write.csv(math, "math.csv")
write.csv(lang, "lang.csv")
# debugging
math <- read.csv("math.csv")
lang <- read.csv("lang.csv")
# debugging
math <- read.csv("math.csv")
lang <- read.csv("lang.csv")
getwd()
range(mathr)$score; range(langr$score)
class(mathr$score)
range(mathr$score); range(langr$score)
range(mathr$id); range(langr$id)
range(mathr$score); range(langr$score)
range(mathr$id); range(langr$id)
range(mathr$score); range(langr$score)
rm(list = ls())
# Chunk 1: setup
library(learnr)
library(data.table)
library(dplyr)
library(pwr)
library(tidyr)
library(stats)
library(ggplot2)
library(sortable)
shhh <- suppressPackageStartupMessages
shh <- suppressWarnings
sh <- suppressMessages
knitr::opts_chunk$set(echo = FALSE)
options(digits = 3, scipen = 9999)
tutorial_options(exercise.completion = FALSE,
exercise.eval = TRUE,
exercise.lines = 8,
exercise.diagnostics = TRUE)
# math <- read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeMath.csv")
# lang <- read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeLang.csv")
# debugging
math <- read.csv("/Users/braunsb/Documents/GitHub/a-MESS Lessons/sb-date-pairing-in-r/math.csv")
lang <- read.csv("/Users/braunsb/Documents/GitHub/a-MESS Lessons/sb-date-pairing-in-r/lang.csv")
mathr <- rename(.data = math, id = subjectID, date = testDate, score = mathScore)
langr <- rename(.data = lang, id = subjectID, date = testDate, score = languageScore)
# Chunk 2: what-problems-to-solve
question("What problem do we want to solve by pairing dates?",
answer("We want to compare two variables but we have multiple records for some patients, either in the responses to one instrument or in two or more instruments", correct = TRUE),
answer("There is no research question", message = "We may not have a research question, but more study and thought rather than pairing dates will help us solve that problem."),
answer("2008/1.33", message = "That's a math problem. Date pairing will not help you. Try typing it into the console if you really want to solve it."),
answer("We want to identify unique cases and keep only those", message = "You can solve this by widening both data sets, binding their rows, and passing the new data set name to `unique`. Date pairing will not help you."),
correct = "You are amazing!",
incorrect = "Incorrect.",
random_answer_order = TRUE,
allow_retry = TRUE
)
# Chunk 3: load-data
# library(tidyverse)
# math <- as_tibble(read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeMath.csv"))
# lang <- as_tibble(read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeLang.csv"))
# Chunk 4: load-data-solution
library(tidyverse)
# math <- as_tibble(read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeMath.csv"))
# lang <- as_tibble(read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeLang.csv"))
# Chunk 5: seemath-lang
# Chunk 6: seemath-lang-hint
math
...
# Chunk 7: seemath-lang-solution
math
lang
# Chunk 8: rename-vars
# Chunk 9: rename-vars-hint-1
mathr <- rename(...)
# Chunk 10: rename-vars-hint-2
mathr <- rename(.data = math, ...)
rename(.data = lang, ...)
# Chunk 11: rename-vars-hint-3
mathr <- rename(.data = math, id = subjectID, ...)
langr <- rename(.data = lang, ...)
# Chunk 12: rename-vars-solution
mathr <- rename(.data = math, id = subjectID, date = testDate, score = mathScore)
langr <- rename(.data = lang, id = subjectID, date = testDate, score = languageScore)
names(mathr); names(langr)
names(mathr)
str(mathr)
# Chunk 1: setup
library(learnr)
library(data.table)
library(dplyr)
library(pwr)
library(tidyr)
library(stats)
library(ggplot2)
library(sortable)
shhh <- suppressPackageStartupMessages
shh <- suppressWarnings
sh <- suppressMessages
knitr::opts_chunk$set(echo = FALSE)
options(digits = 3, scipen = 9999)
tutorial_options(exercise.completion = FALSE,
exercise.eval = TRUE,
exercise.lines = 8,
exercise.diagnostics = TRUE)
math <- read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeMath.csv")
lang <- read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeLang.csv")
# # debugging
# math <- read.csv("/Users/braunsb/Documents/GitHub/a-MESS Lessons/sb-date-pairing-in-r/math.csv")
# lang <- read.csv("/Users/braunsb/Documents/GitHub/a-MESS Lessons/sb-date-pairing-in-r/lang.csv")
mathr <- rename(.data = math, id = subjectID, date = testDate, score = mathScore)
langr <- rename(.data = lang, id = subjectID, date = testDate, score = languageScore)
# Chunk 2: what-problems-to-solve
question("What problem do we want to solve by pairing dates?",
answer("We want to compare two variables but we have multiple records for some patients, either in the responses to one instrument or in two or more instruments", correct = TRUE),
answer("There is no research question", message = "We may not have a research question, but more study and thought rather than pairing dates will help us solve that problem."),
answer("2008/1.33", message = "That's a math problem. Date pairing will not help you. Try typing it into the console if you really want to solve it."),
answer("We want to identify unique cases and keep only those", message = "You can solve this by widening both data sets, binding their rows, and passing the new data set name to `unique`. Date pairing will not help you."),
correct = "You are amazing!",
incorrect = "Incorrect.",
random_answer_order = TRUE,
allow_retry = TRUE
)
# Chunk 3: load-data
# library(tidyverse)
# math <- as_tibble(read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeMath.csv"))
# lang <- as_tibble(read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeLang.csv"))
# Chunk 4: load-data-solution
library(tidyverse)
math <- as_tibble(read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeMath.csv"))
lang <- as_tibble(read.csv("https://raw.githubusercontent.com/pm0kjp/datastore/master/fakeLang.csv"))
# Chunk 5: seemath-lang
# Chunk 6: seemath-lang-hint
math
...
# Chunk 7: seemath-lang-solution
math
lang
# Chunk 8: rename-vars
# Chunk 9: rename-vars-hint-1
mathr <- rename(...)
# Chunk 10: rename-vars-hint-2
mathr <- rename(.data = math, ...)
rename(.data = lang, ...)
# Chunk 11: rename-vars-hint-3
mathr <- rename(.data = math, id = subjectID, ...)
langr <- rename(.data = lang, ...)
# Chunk 12: rename-vars-solution
mathr <- rename(.data = math, id = subjectID, date = testDate, score = mathScore)
langr <- rename(.data = lang, id = subjectID, date = testDate, score = languageScore)
names(mathr); names(langr)
names(math)
names(language)
names(lang)
var <- "```"
var
var <- ````
var <- /````
var <- ```{r echo = FALSE}
var <- "```{r echo = FALSE}"
var
paste(var)
writelines(var)
writeLines(var)
mathr
class(date)
class(mathr$date)
class(mathr$date); class(langr$d)
class(mathr$date); class(langr$date)
sapply(mathr, class)
head(mathr$date); head(langr$date)
hist(mathr$score)
hist(langr$score)
hist(mathr$score); hist(langr$score)
?qplot
mode(mathr$score); mode(langr$score)
summary(mathr$score)
hist(mathr$score); hist(langr$score)
